#!/bin/sh
#
# myproject
#
# chkconfig: 2345 20 80
# description:
#

### BEGIN INIT INFO
# Provides:
# Required-Start: $remote_fs $syslog
# Required-Stop: $remote_fs $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Should-Start:
# Should-Stop:
# Short-Description:
# Description:
### END INIT INFO

### -----------------
# This script was created using following sources
#
# http://stackoverflow.com/questions/8124345/call-to-daemon-in-a-etc-init-d-script-is-blocking-not-running-in-background
# https://fedoraproject.org/wiki/Packaging:SysVInitScript#Initscript_template
### -----------------

# Source function library.
. /etc/rc.d/init.d/functions

prog="myproject"

# FIXME The pid file should be handled by the executed script
# The pid can be filled in in this script
PIDFILE=/var/run/myproject/running.pid

if [ -z "$DAEMON_USER" ]; then
    DAEMON_USER=root
fi

if [ -z "$DAEMON_GROUP" ]; then
    DAEMON_GROUP=root
fi


# smb could define some additional options in $RUN_OPTS
RUN_CMD="/usr/share/myproject/bin/myproject"
MODE=$1
[ $# -ge 1 ] && shift
RUN_OPTS="$*"

# /etc/default/myproject is used by the wrapper
[ -e /etc/default/$prog ] && . /etc/default/$prog 2> /dev/null

# this isn't used currently
[ -e /etc/sysconfig/$prog ] && . /etc/sysconfig/$prog

lockfile=/var/lock/subsys/$prog

# $JAVA_OPTS used by the wrapper
export JAVA_OPTS

export JAVA_HOME=/usr/java/latest

start() {
    [ -x $RUN_CMD ] || exit 5
    echo -n $"Starting $prog: "
    cd /usr/share/myproject

    # FIXME figure out how to use daemon correctly
    nohup runuser -s /bin/sh $DAEMON_USER -c "${RUN_CMD} ${RUN_OPTS}" >> /var/log/myproject/daemon.log 2>&1 &

    # The way to go, but doesn't work properly
	# If the app creates the pid file this gets messy
	# daemon --user $DAEMON_USER --pidfile $PIDFILE $RUN_CMD &


    retval=$?   # last error code
    PID=$!      # pid of last backgrounded process
    [ $retval -eq 0 ] && touch ${lockfile} && success || failure

    # Insert pid into pid file for CentOS killproc function
    [ -d "/var/run/myproject" ] || install -d -o "$DAEMON_USER" -g "$DAEMON_GROUP" -m755 "/var/run/myproject"
    echo
    echo $PID > ${PIDFILE}
    return $retval
}

stop() {
    echo -n $"Stopping $prog: "
    killproc -p $PIDFILE $prog
    retval=$?
    [ $retval -eq 0 ] && rm -f $lockfile
    return $retval
}

restart() {
    stop
    start
}

reload() {
    restart
}

force_reload() {
    restart
}

rh_status() {
    # run checks to determine if the service is running or use generic status
    status -p $PIDFILE -l $lockfile $prog
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}


case "$MODE" in
    start)
	rh_status_q && exit 0
	$MODE
	;;
    stop)
	rh_status_q || exit 0
	$MODE
	;;
    restart)
	$MODE
	;;
    reload)
	rh_status || exit 7
	$MODE
	;;
    force-reload)
	force_reload
	;;
    status)
	rh_status
	;;
    condrestart|try-restart)
	rh_status || exit 0
	restart
	;;
    *)
	echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
	exit 2
esac
exit $?
